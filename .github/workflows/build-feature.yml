name: Build and Test Feature Branch
on:
  pull_request:
      branches: [ develop ]
      types: [ opened, reopened ]

jobs:
    Source-Build:
        # Define the platform to work in
        runs-on: ubuntu-latest
        steps:
            # Checkout your code into the container
            - uses: actions/checkout@v3
              with:
                ref: ${{ github.event.pull_request.head.sha }} # Making a pull_request on develop: Download the code from feature branch
            - name: Setup Node.js/npm to your path 
              uses: actions/setup-node@v2
              with:
                node-version: 16
            - name: Clean Install for automated envs
              run: npm ci

  # Runs unit tests
    Unit-Tests:
      runs-on: ubuntu-latest
      needs: Source-Build
      if: ${{ success() }}
      steps:
          - name: Checkout Code
            uses: actions/checkout@v3
            with:
              ref: ${{ github.event.pull_request.head.sha }} # Making a pull_request on develop: Download the code from feature branch
          - name: Setup Node.js/npm to your path 
            uses: actions/setup-node@v2
            with:
              node-version: 16
          - name: Clean Install
            run: npm ci
          - name: Execute Tests
            run: npm test

# Automatic merge to develop branch
    # Execute only if the previos job ended succesfully
    merge-feature-into-develop:
      runs-on: ubuntu-latest
      needs: Unit-Tests
      if: ${{ success() }}
# Modify permissions for content and pull-request on GITHUB_TOKEN for push changes
      permissions:
        contents: write
        pull-requests: write
      steps:
# Dowload the code from destination branch (develop) | fetch-depth: 0 to fech all history for all branches
        - uses: actions/checkout@v3
          with:
            ref: ${{ github.base_ref }}
            fetch-depth: 0

# Merge to develop branch if previos jobs ended succesfully
        - name: Merge to development branch
          if: ${{ success() }}
          run: |
            git config --global user.email "EMAIL-OF-WORKFLOW@USER"
            git config --global user.name "WORKFLOW-USER" 
            #Using -m "mesage" on merge command ins mandatori here in order to avoid open a text editor to write a commit message
            git merge --no-ff --verbose origin/${{ github.event.pull_request.head.ref }} -m "Merge pull request #${{ github.event.number }}"

# Push changes after merge if previos jobs ended succesfully
        - name: Push changes after merge
          if: ${{ success() }}
          uses: ad-m/github-push-action@master
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            branch: ${{ github.base_ref }}

# Call workflow: "publish-build-as-artifact"
        - name: trigger deploy artifact
          if: success()
          uses: peter-evans/repository-dispatch@v2
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            repository: ${{ github.repository }}
            event-type: publish-artifact-event
            client-payload: '{ "base_branch": "${{ github.base_ref }}" }' # Send the name of the base branch used in this workflow (develop)