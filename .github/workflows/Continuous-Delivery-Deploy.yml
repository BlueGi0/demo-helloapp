name: Deploy app on EKS
on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
    workflow_dispatch:

permissions:
    id-token: write
    contents: write
    packages: write
          
jobs:
    Build-Application-Tests:
        # Define the platform to work in
        runs-on: ubuntu-latest
        
        steps:
            # Checkout your code into the container
            - uses: actions/checkout@v2
              with:
                # Making a pull_request on develop: Download the code from feature branch
                ref: ${{ github.event.pull_request.head.sha }}
            # Setup node and npm to your path
            - name: Use Node.js 
              uses: actions/setup-node@v2
              with:
                node-version: 16
            # Runs clean install of npm for automated environments
            - run: npm ci
            # Run tests
            - name: Ejecutar pruebas
              run: npm test
        
    Deploy-to-Dev:
        name: Deploy to Development
        if: github.event_name == 'pull_request'
        needs: [Build-Application-Tests]
        # Define the platform to work in
        runs-on: ubuntu-latest
        environment:
            name: Development

        steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Use Node.js 
          uses: actions/setup-node@v2
          with:
            node-version: 16
        - run: npm ci

        - name: Install kubectl
          uses: azure/setup-kubectl@v3
          with:
            version: 'v1.28.0'
          id: install

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v3
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
            role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
            role-session-name: ${{ secrets.AWS_ROLE_SESSION_NAME }}

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
          with:
            mask-password: 'true'
    
        - name: Build, tag, and push docker image to Amazon ECR
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: express
            IMAGE_TAG: ${{ github.sha }}
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY
    
        - name: Update kube config
          run: aws eks update-kubeconfig --name eks-demo --region us-east-2
      
        - name: Deploy to EKS
          run: |
              ${{ secrets.AWS_CREDENTIALS_EXPORT }}
              kubectl apply -f deployment-qa.yaml
              kubectl apply -f service-qa.yaml


    Deploy-to-Stg:
        name: Deploy to Staging
        if: github.event.ref == 'refs/heads/main'
        needs: [Build-Application-Tests]
        # Define the platform to work in
        runs-on: ubuntu-latest
        environment:
            name: Staging
        
        steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Checkout code
          uses: actions/checkout@v3

        - name: Use Node.js 
          uses: actions/setup-node@v2
          with:
            node-version: 16
        - run: npm ci

        - name: Install kubectl
          uses: azure/setup-kubectl@v3
          with:
            version: 'v1.28.0'
          id: install
            
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v3
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
            role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
            role-session-name: ${{ secrets.AWS_ROLE_SESSION_NAME }}
            
                
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
          with:
            mask-password: 'true'
            
        - name: Build, tag, and push docker image to Amazon ECR
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: express
            IMAGE_TAG: ${{ github.sha }}
          run: |
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
                docker push $ECR_REGISTRY/$ECR_REPOSITORY
            
        - name: Update kube config
          run: aws eks update-kubeconfig --name eks-demo --region us-east-2
              
        - name: Deploy to EKS
          run: |
            ${{ secrets.AWS_CREDENTIALS_EXPORT }}
            kubectl apply -f deployment-stg.yaml
            kubectl apply -f service-stg.yaml

    Deploy-to-Prod:
        name: Deploy to Production
        needs: [Deploy-to-Stg]
        # Define the platform to work in
        runs-on: ubuntu-latest
        environment:
                name: Production
                
        steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Checkout code
          uses: actions/checkout@v3

        - name: Use Node.js 
          uses: actions/setup-node@v2
          with:
            node-version: 16
        - run: npm ci

        - name: Install kubectl
          uses: azure/setup-kubectl@v3
          with:
            version: 'v1.28.0'
          id: install
                    
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v3
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
            role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
            role-session-name: ${{ secrets.AWS_ROLE_SESSION_NAME }}
                        
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
          with:
            mask-password: 'true'
                    
        - name: Build, tag, and push docker image to Amazon ECR
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: express
            IMAGE_TAG: ${{ github.sha }}
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY
                    
        - name: Update kube config
          run: aws eks update-kubeconfig --name eks-demo --region us-east-2
                      
        - name: Deploy to EKS
          run: |
            ${{ secrets.AWS_CREDENTIALS_EXPORT }}
            kubectl apply -f deployment-prd.yaml
            kubectl apply -f service-prd.yaml

# Call workflow: "create release"
#        - name: trigger create release
#          if: success()
#          uses: peter-evans/repository-dispatch@v2
#          with:
#            token: ${{ secrets.GITHUB_TOKEN }}
#            repository: ${{ github.repository }}
#            event-type: create-release
#            client-payload: '{ "base_branch": "${{ github.base_ref }}" }'
