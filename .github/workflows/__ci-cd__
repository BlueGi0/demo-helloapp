name: CI/CD

on:
    pull_request:
        branches: [ develop ]
        types: [ opened, reopened ]

permissions:
    id-token: write
    contents: read
    packages: write
          
jobs:
    CI:
        # Define the platform to work in
        runs-on: ubuntu-latest
        
        steps:
            # Checkout your code into the container
            - uses: actions/checkout@v2
              with:
                # Making a pull_request on develop: Download the code from feature branch
                ref: ${{ github.event.pull_request.head.sha }}
            # Setup node and npm to your path
            - name: Use Node.js 
              uses: actions/setup-node@v2
              with:
                node-version: 16
            # Runs clean install of npm for automated environments
            - run: npm ci
            # Run tests
            - name: Ejecutar pruebas
              run: npm test
        
    CD:
        # Define the platform to work in
        runs-on: ubuntu-latest
        
        steps:
        - name: Checkout code
          uses: actions/checkout@v3
    
        - name: Install kubectl
          uses: azure/setup-kubectl@v3
          with:
            version: 'v1.28.0'
          id: install
    
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v3
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
            role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
            role-session-name: rol-github
        
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
          with:
            mask-password: 'true'
    
        - name: Build, tag, and push docker image to Amazon ECR
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: express
            IMAGE_TAG: ${{ github.sha }}
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY
    
        - name: Update kube config
          run: aws eks update-kubeconfig --name eks-demo --region us-east-2
    
        - name: Deploy to EKS
          run: |
            ${{ secrets.AWS_CREDENTIALS_EXPORT }}
            kubectl apply -f deployment.yaml
            kubectl apply -f service.yaml