name: Create Release
on:
  push:
    tags:
      - '*'
  repository_dispatch:
    types: [create-release]

permissions:
    id-token: write
    contents: write
    packages: write

jobs:
    Release:
      name: Upload Release Asset
      runs-on: ubuntu-latest
      environment:
        name: Production
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

          # Get the list of tags
          # Check if any tag follows the version format (e.g., v1.2.3)
          # Determine the next version
        - name: Determine Next Version
          id: determine_next_version
          run: |
              git fetch --tags
              tag_list=$(git tag --list)
              latest_version="v1.0.0"
              for tag in $tag_list; do
                if [[ $tag =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
                  latest_version=$tag
                fi
              done
              # Extraer las partes de la versión
              major_version=$(echo $latest_version | cut -d'.' -f2)
              minor_version=$(echo $latest_version | cut -d'.' -f3)
              # Aumentar el número de versión
              new_major_version=$major_version
              new_minor_version=$((minor_version + 1))
              new_version="v${new_major_version}.${new_minor_version}.0"
              echo "::set-output name=new_version::$new_version"
          shell: bash

        - name: Build project # This would actually build your project, using zip for an example artifact
          run: |
            zip --junk-paths hello-world README.md

        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ steps.determine_next_version.outputs.new_version }}
            release_name: Release ${{ steps.determine_next_version.outputs.new_version }}
            draft: false
            prerelease: false

        - name: Upload Release Asset
          id: upload-release-asset 
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./hello-world.zip
            asset_name: hello-world.zip
            asset_content_type: application/zip